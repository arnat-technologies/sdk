/*
 _   _ _   _ _ _ _   _
| | | | | (_) (_) | (_)
| | | | |_ _| |_| |_ _  ___  ___
| | | | __| | | | __| |/ _ \/ __|
| |_| | |_| | | | |_| |  __/\__ \
 \___/ \__|_|_|_|\__|_|\___||___/


______                                _
| ___ \                              (_)
| |_/ /___  ___ _ __   ___  _ __  ___ ___   _____
|    // _ \/ __| '_ \ / _ \| '_ \/ __| \ \ / / _ \
| |\ \  __/\__ \ |_) | (_) | | | \__ \ |\ V /  __/
\_| \_\___||___/ .__/ \___/|_| |_|___/_| \_/ \___|
               | |
               |_|
 _____                  _
/  ___|                (_)
\ `--. _ __   __ _  ___ _ _ __   __ _
 `--. \ '_ \ / _` |/ __| | '_ \ / _` |
/\__/ / |_) | (_| | (__| | | | | (_| |
\____/| .__/ \__,_|\___|_|_| |_|\__, |
      | |                        __/ |
      |_|                       |___/
*/

// /**
//  * Utility classes enhancing the normal spacing classes by adding responsiveness
//  * to them. By default, there are not responsive spacings defined. You can
//  * generate responsive spacings by adding entries to the following three Sass
//  * maps, e.g.:
//  *
//  *   $it-responsive-spacing-directions: (
//  *     null: null,
//  *     "-bottom": "-bottom",
//  *   );
//  *
//  *   $it-responsive-spacing-properties: (
//  *     "margin": "margin",
//  *   );
//  *
//  *   $it-responsive-spacing-sizes: (
//  *     "-small": $it-global-spacing-unit-small,
//  *   );
//  *
//  * This would bring us the following classes:
//  *
//  *   .u-margin-small@mobile {}
//  *   .u-margin-small@tablet {}
//  *   .u-margin-small@desktop {}
//  *   .u-margin-small@wide {}
//  *   .u-margin-bottom-small@mobile {}
//  *   .u-margin-bottom-small@tablet {}
//  *   .u-margin-bottom-small@desktop {}
//  *   .u-margin-bottom-small@wide {}
//  *
//  * You can change the generated CSS classes by further extending the Sass maps.
//  * If you want every ‘normal’ spacing (those from `utilities.spacings`) also as
//  * a responsive version, you can just mirror the ‘normal’ spacings:
//  *
//  *   $it-responsive-spacing-directions: $it-spacing-directions !default;
//  *
//  *   $it-responsive-spacing-properties: $it-spacing-properties !default;
//  *
//  *   $it-responsive-spacing-sizes: $it-spacing-sizes !default;
//  *
//  * BUT BE AWARE: This can generate a huge chunk of extra CSS, depending on the
//  * amount of breakpoints you defined. So please check your CSS’ output and
//  * filesize!
//  */

// // The responsive spacings just make sense and work properly when the ‘normal’
// // spacings are included, too. In case they're not, we set `_utilities.spacings`
// // to `null`.
// $it-spacing-directions: null !default;

// // If the ‘normal’ spacings partial is not included, we provide an error message
// // to indicate this.
// @if $it-spacing-directions == null {
//   @error "In order to use responsive spacings, you also need to include `_utilities.spacings.scss`!";
// } @else {
//   // When using Sass-MQ, this defines the separator for the breakpoints suffix
//   // in the class name. By default, we are generating the responsive suffixes
//   // for the classes with a `@` symbol so you get classes like:
//   //
//   //   <div class="u-margin-bottom@mobile">
//   //
//   // Be aware that since the `@` symbol is a reserved symbol in CSS, it has to be
//   // escaped with a `\`. In the markup though, you write your classes without the
//   // backslash (e.g. `u-margin-bottom@mobile`).
//   $it-widths-breakpoint-separator: \@ !default;

//   $it-responsive-spacing-directions: null !default;

//   $it-responsive-spacing-properties: null !default;

//   $it-responsive-spacing-sizes: null !default;

//   /* stylelint-disable max-nesting-depth */

//   // Don't output anything if no responsive spacings are defined.
//   @if ($it-responsive-spacing-properties != null) {
//     @each $property-namespace, $property in $it-responsive-spacing-properties
//     {
//       @each $direction-namespace,
//         $direction-rules in $it-responsive-spacing-directions
//       {
//         @each $size-namespace, $size in $it-responsive-spacing-sizes {
//           @each $it-bp-name, $it-bp-value in $mq-breakpoints {
//             @include mq($from: $it-bp-name) {
//               .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace}#{$it-widths-breakpoint-separator}#{$it-bp-name} {
//                 @each $direction in $direction-rules {
//                   #{$property}#{$direction}: $size !important;
//                 }
//               }
//             }
//           }
//         }
//       }
//     }
//   }

//   /* stylelint-enable max-nesting-depth */
// }
