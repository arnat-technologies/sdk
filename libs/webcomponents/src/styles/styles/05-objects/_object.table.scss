/*
 _____ _     _           _     _____     _     _
|  _  | |   (_)         | |   |_   _|   | |   | |
| | | | |__  _  ___  ___| |_    | | __ _| |__ | | ___
| | | | '_ \| |/ _ \/ __| __|   | |/ _` | '_ \| |/ _ \
\ \_/ / |_) | |  __/ (__| |_    | | (_| | |_) | |  __/
 \___/|_.__/| |\___|\___|\__|   \_/\__,_|_.__/|_|\___|
           _/ |
          |__/
*/

// $it-table-tiny-cell-padding: $it-global-spacing-unit-tiny !default;
// $it-table-small-cell-padding: $it-global-spacing-unit-small !default;
// $it-table-large-cell-padding: $it-global-spacing-unit-large !default;
// $it-table-huge-cell-padding: $it-global-spacing-unit-huge !default;

// /**
//  * A simple object for manipulating the structure of HTML `table`s.
//  */

// .o-table {
//   width: 100%;
// }

// /* Equal-width table cells
//    ========================================================================== */

// /**
//  * `table-layout: fixed` forces all cells within a table to occupy the same
//  * width as each other. This also has performance benefits: because the browser
//  * does not need to (re)calculate cell dimensions based on content it discovers,
//  * the table can be rendered very quickly. Further reading:
//  * https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout#Values
//  */

// .o-table--fixed {
//   table-layout: fixed;
// }

// /* Size variants
//    ========================================================================== */

// .o-table--tiny {
//   th,
//   td {
//     padding: $it-table-tiny-cell-padding;
//   }
// }

// .o-table--small {
//   th,
//   td {
//     padding: $it-table-small-cell-padding;
//   }
// }

// .o-table--large {
//   th,
//   td {
//     padding: $it-table-large-cell-padding;
//   }
// }

// .o-table--huge {
//   th,
//   td {
//     padding: $it-table-huge-cell-padding;
//   }
// }
